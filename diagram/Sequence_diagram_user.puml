@startuml Authentication API

header Authentication API
footer Page %page% of %lastpage%
title "User Authentication"

participant "Client" as client
participant "<<JavaScript>>\n:Server" as server
participant "<<Router>>\n:auth" as routerAuth
participant "<<Middleware>>\n:AuthMiddleware (protect)" as authMiddleware
participant "<<Controller>>\n:auth" as controllersAuth
participant "<<Model>>\n:User" as modelUser
database "<<MongoDB>>\n:UsersDB" as UsersDatabase

== User Registration ==
client -> server ++ : req.post('/api/auth/register', body)
server -> routerAuth ++ : app.use('/api/auth', auth)
routerAuth -> controllersAuth ++ : router.post('/register', register)
controllersAuth -> modelUser ++ : createUser(req.body)
modelUser -> UsersDatabase ++ : Insert user data
UsersDatabase --> modelUser -- : new user object
controllersAuth <-- modelUser -- : user
controllersAuth -> client -- : response (success, token)

== User Login ==
client -> server ++ : req.post('/api/auth/login', credentials)
server -> routerAuth ++ : app.use('/api/auth', auth)
routerAuth -> controllersAuth ++ : router.post('/login', login)
controllersAuth -> modelUser ++ : authenticateUser(req.body)
modelUser -> UsersDatabase ++ : Find user by email
UsersDatabase --> modelUser -- : user data
controllersAuth <-- modelUser -- : token
controllersAuth -> client -- : response (token, user info)

== User Logout ==
client -> server ++ : req.post('/api/auth/logout')
server -> routerAuth ++ : app.use('/api/auth', auth)
routerAuth -> authMiddleware ++ : protect()
authMiddleware -> routerAuth -- : next()
routerAuth -> controllersAuth ++ : router.post('/logout', logout)
controllersAuth -> client -- : response (success message)

== Get Current User ==
client -> server ++ : req.get('/api/auth/me')
server -> routerAuth ++ : app.use('/api/auth', auth)
routerAuth -> authMiddleware ++ : protect()
authMiddleware -> routerAuth -- : next()
routerAuth -> controllersAuth ++ : router.get('/me', getMe)
controllersAuth -> modelUser ++ : getUserById(req.user.id)
modelUser -> UsersDatabase ++ : Find user by ID
UsersDatabase --> modelUser -- : user data
controllersAuth <-- modelUser -- : user object
controllersAuth -> client -- : response (user info)

@enduml
